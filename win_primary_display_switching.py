import win32api
import win32con
import time

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã (–∏—Ö –Ω–µ—Ç –≤ win32con)
DISPLAY_DEVICE_ACTIVE = 0x00000001
DISPLAY_DEVICE_PRIMARY_DEVICE = 0x00000004

def get_monitors():
    print("–ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–Ω–∏—Ç–æ—Ä–æ–≤ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º '–ì–ª–∞–≤–Ω—ã–π'")
    primary_display = None
    secondary_display = None
    device_index = 0
    monitors_info = []

    while True:
        try:
            device = win32api.EnumDisplayDevices(None, device_index)
            if device.StateFlags & DISPLAY_DEVICE_ACTIVE:
                if device.StateFlags & DISPLAY_DEVICE_PRIMARY_DEVICE:
                    primary_display = device.DeviceName
                else:
                    secondary_display = device.DeviceName

                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
                devmode = win32api.EnumDisplaySettings(device.DeviceName, win32con.ENUM_CURRENT_SETTINGS)
                monitors_info.append({
                    'device_name': device.DeviceName,
                    'x': devmode.Position_x,
                    'y': devmode.Position_y,
                    'width': devmode.PelsWidth,
                    'height': devmode.PelsHeight
                })

                print(f"  üñ• –ú–æ–Ω–∏—Ç–æ—Ä #{device_index+1}: {device.DeviceName}"
                    f" ({devmode.Position_x},{devmode.Position_y})"
                    f" / –§–ª–∞–≥–∏: {device.StateFlags:08x}"
                    f"{' <- –ì–ª–∞–≤–Ω—ã–π' if device.StateFlags & DISPLAY_DEVICE_PRIMARY_DEVICE else ''}")
                    
            device_index += 1
        except win32api.error:
            break  # –ë–æ–ª—å—à–µ –¥–∏—Å–ø–ª–µ–µ–≤ –Ω–µ—Ç

    return primary_display, secondary_display, monitors_info

def change_monitor_settings(device_name, newX, newY, willBePrimary) -> bool:
    devmode = win32api.EnumDisplaySettings(device_name, win32con.ENUM_CURRENT_SETTINGS)
    print(f"  üõ† –î–ª—è {device_name} –º–µ–Ω—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å ({devmode.Position_x}, {devmode.Position_y}) –Ω–∞ ({newX}, {newY})")

    devmode.Position_x = newX
    devmode.Position_y = newY

    stateFlags = win32con.CDS_NORESET | win32con.CDS_UPDATEREGISTRY
    if willBePrimary:
        print(f"    + —É—Å—Ç–∞–Ω–æ–≤–ª–∏–≤–∞–µ–º –∫–∞–∫ '–ì–ª–∞–≤–Ω—ã–π' –º–æ–Ω–∏—Ç–æ—Ä")
        stateFlags = stateFlags | win32con.CDS_SET_PRIMARY

    result = win32api.ChangeDisplaySettingsEx(device_name, devmode, stateFlags)
    if result == win32con.DISP_CHANGE_SUCCESSFUL:
        print(f"    ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –¥–ª—è {device_name}")
    else:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è {device_name}")

    return result == win32con.DISP_CHANGE_SUCCESSFUL


def apply_all_changes():
    print()
    result = win32api.ChangeDisplaySettingsEx()
    if result == win32con.DISP_CHANGE_SUCCESSFUL:
        print("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")


def switch_primary_monitor():
    """ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –ì–ª–∞–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –º–µ–∂–¥—É –¥–≤—É–º—è –Ω–∞–π–¥–µ–Ω–Ω–µ–º—ã —Å —É—á–µ—Ç–æ–º X-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã """
    primary_display, secondary_display, monitors_info = get_monitors()

    if secondary_display:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Å–ø–ª–µ—è—Ö
        primary_info = next((monitor for monitor in monitors_info if monitor['device_name'] == primary_display), None)
        secondary_info = next((monitor for monitor in monitors_info if monitor['device_name'] == secondary_display), None)

        if primary_info and secondary_info:
            print(f"\nüîÑ –ú–µ–Ω—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä—ã...")

            # –°–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –ù–µ–≥–ª–∞–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –≤ (0, 0) –∏ –¥–µ–ª–∞–µ–º –µ–≥–æ –ì–ª–∞–≤–Ω—ã–º
            if change_monitor_settings(secondary_display, 0, 0, True):
                # –ë—ã–≤—à–∏–π –ì–ª–∞–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä —Å–º–µ—â–∞–µ–º, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ
                # –ï—Å–ª–∏ –ì–ª–∞–≤–Ω—ã–π –±—ã–ª —Å–ª–µ–≤–∞, —Å–¥–≤–∏–≥–∞–µ–º –µ–≥–æ –≤–ø—Ä–∞–≤–æ, –µ—Å–ª–∏ —Å–ø—Ä–∞–≤–∞ - –≤–ª–µ–≤–æ
                if secondary_info['x'] < 0:
                    new_primary_x = secondary_info['width']  # –°–¥–≤–∏–≥–∞–µ–º –≤–ø—Ä–∞–≤–æ
                else:
                    new_primary_x = -secondary_info['width']  # –°–¥–≤–∏–≥–∞–µ–º –≤–ª–µ–≤–æ

                if change_monitor_settings(primary_display, new_primary_x, 0, False):
                    apply_all_changes()
    else:
        print("‚ùå –í—Ç–æ—Ä–æ–π –º–æ–Ω–∏—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!")


if __name__ == "__main__":
    switch_primary_monitor()
