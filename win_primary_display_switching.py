import win32api
import win32con
import time

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã (–∏—Ö –Ω–µ—Ç –≤ win32con)
DISPLAY_DEVICE_ACTIVE = 0x00000001
DISPLAY_DEVICE_PRIMARY_DEVICE = 0x00000004

def get_monitors():
    """ –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–Ω–∏—Ç–æ—Ä–æ–≤ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –æ—Å–Ω–æ–≤–Ω–æ–π """
    primary_display = None
    secondary_display = None
    device_index = 0
    monitors_info = []

    while True:
        try:
            device = win32api.EnumDisplayDevices(None, device_index)
            if device.StateFlags & DISPLAY_DEVICE_ACTIVE:
                print(f"üñ• –î–∏—Å–ø–ª–µ–π –Ω–∞–π–¥–µ–Ω: {device.DeviceName} "
                      f"{'(–¢–µ–∫—É—â–∏–π –≥–ª–∞–≤–Ω—ã–π)' if device.StateFlags & DISPLAY_DEVICE_PRIMARY_DEVICE else ''}")

                if device.StateFlags & DISPLAY_DEVICE_PRIMARY_DEVICE:
                    primary_display = device.DeviceName
                else:
                    secondary_display = device.DeviceName

                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
                devmode = win32api.EnumDisplaySettings(device.DeviceName, win32con.ENUM_CURRENT_SETTINGS)
                monitors_info.append({
                    'device_name': device.DeviceName,
                    'x': devmode.Position_x,
                    'y': devmode.Position_y,
                    'width': devmode.PelsWidth,
                    'height': devmode.PelsHeight
                })
                
                # –í—ã–≤–æ–¥–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–∂–¥–æ–≥–æ –¥–∏—Å–ø–ª–µ—è
                print(f"  üìç –ü–æ–ª–æ–∂–µ–Ω–∏–µ {device.DeviceName}: ({devmode.Position_x},{devmode.Position_y})")

            device_index += 1
        except win32api.error:
            break  # –ë–æ–ª—å—à–µ –¥–∏—Å–ø–ª–µ–µ–≤ –Ω–µ—Ç

    return primary_display, secondary_display, monitors_info

def set_display_position(device_name, x, y):
    """ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é –º–æ–Ω–∏—Ç–æ—Ä–∞ """
#    print(f"  üõ† –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è {device_name} –Ω–∞ ({x}, {y})")  # –ù–æ–≤—ã–π –≤—ã–≤–æ–¥
    devmode = win32api.EnumDisplaySettings(device_name, win32con.ENUM_CURRENT_SETTINGS)
    devmode.Position_x = x
    devmode.Position_y = y
    result = win32api.ChangeDisplaySettingsEx(device_name, devmode)
    
    if result == win32con.DISP_CHANGE_SUCCESSFUL:
        print(f"  ‚úÖ –ü–æ–∑–∏—Ü–∏—è –¥–∏—Å–ø–ª–µ—è {device_name} –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ({x}, {y})")
    else:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –¥–∏—Å–ø–ª–µ—è {device_name}: {result}")

def set_primary_monitor(device_name):
    print(f"  ‚áî –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä –Ω–∞ {device_name}...")
    """ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π """
    devmode = win32api.EnumDisplaySettings(device_name, win32con.ENUM_CURRENT_SETTINGS)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç—Ç–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π
    result = win32api.ChangeDisplaySettingsEx(device_name, devmode, win32con.CDS_SET_PRIMARY)

    if result == win32con.DISP_CHANGE_SUCCESSFUL:
        print(f"    ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {device_name}")
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        result = win32api.ChangeDisplaySettingsEx(None, None, win32con.CDS_RESET)
        if result == win32con.DISP_CHANGE_SUCCESSFUL:
            print("      ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –û—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.")
        else:
            print("      ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –º–æ–Ω–∏—Ç–æ—Ä–∞.")
    else:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–∏—Å–ø–ª–µ—è: {result}")

def switch_primary_monitor():
    """ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∏—Å–ø–ª–µ—è–º–∏ —Å —É—á–µ—Ç–æ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç """
    primary_display, secondary_display, monitors_info = get_monitors()

    if secondary_display:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Å–ø–ª–µ—è—Ö
        primary_info = next((monitor for monitor in monitors_info if monitor['device_name'] == primary_display), None)
        secondary_info = next((monitor for monitor in monitors_info if monitor['device_name'] == secondary_display), None)

        if primary_info and secondary_info:
            print(f"\nüîÑ –ú–µ–Ω—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä—ã...")

            # –°–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –Ω–µ–æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä –≤ (0, 0)
            set_display_position(secondary_display, 0, 0)

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä –Ω–∞ –≤—Ç–æ—Ä–æ–π
#            time.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            set_primary_monitor(secondary_display)

            # –¢–µ–ø–µ—Ä—å –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä —Å–º–µ—â–∞–µ–º, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ
            # –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –±—ã–ª —Å–ª–µ–≤–∞, —Å–¥–≤–∏–≥–∞–µ–º –µ–≥–æ –≤–ø—Ä–∞–≤–æ, –µ—Å–ª–∏ —Å–ø—Ä–∞–≤–∞ - –≤–ª–µ–≤–æ
            if secondary_info['x'] < 0:
                new_primary_x = secondary_info['width']  # –°–¥–≤–∏–≥–∞–µ–º –≤–ø—Ä–∞–≤–æ
            else:
                new_primary_x = -secondary_info['width']  # –°–¥–≤–∏–≥–∞–µ–º –≤–ª–µ–≤–æ

            set_display_position(primary_display, new_primary_x, primary_info['y'])
    else:
        print("‚ùå –í—Ç–æ—Ä–æ–π –º–æ–Ω–∏—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!")



if __name__ == "__main__":
    switch_primary_monitor()
